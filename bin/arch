#!/bin/bash
# Unified Arch command for AUR, package queries, and system maintenance.
# This script is intended to run only on Arch Linux.

if [ ! -f /etc/arch-release ]; then
    echo "This script is only intended for Arch Linux."
    exit 1
fi

# ---------------------------------
# Usage/Help Function
# ---------------------------------
usage() {
    cat <<EOF
Usage: arch <command> [subcommand] [options]

Commands:
  help                     Display this help message.

  aur search <package>     Search AUR packages.
  aur add <package>        Install an AUR package.
  aur rm <package>         Remove an AUR package.
  aur update               Update AUR packages.
  aur info <package>       Get AUR package info.
  aur list                 List installed AUR packages.
  aur clean                Clean AUR cache.

  pkg search <package>     Search official repositories.
  pkg add <package>        Install an official package.
  pkg rm <package>         Remove an official package.
  pkg update               Update official repository packages.
  pkg info <package>       Get package info from official repositories.
  pkg list                 List explicitly installed packages.
  pkg owns <file>          Find which package owns a file.
  pkg files <package>      List files in an official package.
  pkg deps <package>       Show dependencies of a package.
  pkg rdeps <package>      Show reverse dependencies of a package.

  maintain                 Run system maintenance tasks.
                           (update system, remove orphans, check services,
                           clean journals, and check for pacnew/pacsave files)

Example:
  arch aur search vscode
  arch pkg deps git
  arch maintain
EOF
    exit 1
}

# ---------------------------------
# AUR Helper Functions
# ---------------------------------
# Ensure that the AUR helper 'paru' is installed.
ensure_paru() {
    if ! command -v paru &>/dev/null; then
        echo "üîß Installing paru AUR helper..."
        git clone https://aur.archlinux.org/paru.git /tmp/paru
        (cd /tmp/paru && makepkg -si --noconfirm)
        rm -rf /tmp/paru
    fi
}

aur_search() {
    if [ -z "$1" ]; then
        echo "Usage: arch aur search package_name"
        return 1
    fi
    ensure_paru
    paru -Ss "^$1"
}

aur_install() {
    if [ -z "$1" ]; then
        echo "Usage: arch aur add package_name"
        return 1
    fi
    ensure_paru
    paru -S "$1"
}

aur_update() {
    ensure_paru
    paru -Sua
}

aur_info() {
    if [ -z "$1" ]; then
        echo "Usage: arch aur info package_name"
        return 1
    fi
    ensure_paru
    paru -Si "$1"
}

list_aur_packages() {
    echo "üì¶ Installed AUR packages:"
    pacman -Qm
}

clean_aur_cache() {
    echo "üßπ Cleaning AUR cache..."
    rm -rf ~/.cache/paru/clone/*
    paru -Sc --noconfirm
}

# ---------------------------------
# Official Package Helper Functions
# ---------------------------------
search_pkg() {
    if [ -z "$1" ]; then
        echo "Usage: arch pkg search package_name"
        return 1
    fi
    pacman -Ss "$1"
}

pkg_info() {
    if [ -z "$1" ]; then
        echo "Usage: arch pkg info package_name"
        return 1
    fi
    pacman -Si "$1"
}

list_installed() {
    echo "üìã Explicitly installed packages:"
    pacman -Qe
}

owns_file() {
    if [ -z "$1" ]; then
        echo "Usage: arch pkg owns /path/to/file"
        return 1
    fi
    pacman -Qo "$1"
}

list_pkg_files() {
    if [ -z "$1" ]; then
        echo "Usage: arch pkg files package_name"
        return 1
    fi
    pacman -Ql "$1"
}

show_deps() {
    if [ -z "$1" ]; then
        echo "Usage: arch pkg deps package_name"
        return 1
    fi
    pactree "$1"
}

show_rdeps() {
    if [ -z "$1" ]; then
        echo "Usage: arch pkg rdeps package_name"
        return 1
    fi
    pactree -r "$1"
}

# ---------------------------------
# New Official Package Update Function
# ---------------------------------
update_pkg() {
    echo "üì¶ Updating official repository packages..."
    sudo pacman -Syu
}

# ---------------------------------
# System Maintenance Functions
# ---------------------------------
update_system() {
    echo "üì¶ Updating system packages..."
    sudo pacman -Syu

    echo "üßπ Cleaning package cache..."
    sudo pacman -Sc --noconfirm

    if command -v paru &>/dev/null; then
        echo "üîÑ Updating AUR packages..."
        paru -Sua
    fi
}

remove_orphans() {
    echo "üóëÔ∏è Removing orphaned packages..."
    readarray -t orphans < <(pacman -Qtdq)
    if [ ${#orphans[@]} -gt 0 ]; then
      sudo pacman -Rns "${orphans[@]}"
    else
      echo "No orphaned packages found."
    fi
}

check_failed_services() {
    echo "üîç Checking failed systemd services..."
    systemctl --failed
}

clean_journals() {
    echo "üìù Cleaning old journal logs..."
    sudo journalctl --vacuum-time=2weeks
}

check_pacnew() {
    echo "üìÑ Checking for .pacnew/.pacsave configuration files..."
    find /etc -name "*.pacnew" -o -name "*.pacsave"
}

arch_maintenance() {
    update_system
    remove_orphans
    check_failed_services
    clean_journals
    check_pacnew
    echo "‚úÖ System maintenance completed!"
}

# ---------------------------------
# New AUR Functions
# ---------------------------------
aur_add() {
    aur_install "$@"
}

aur_rm() {
    if [ -z "$1" ]; then
        echo "Usage: arch aur rm package_name"
        return 1
    fi
    sudo pacman -Rns "$1"
}

# ---------------------------------
# New Functions for Official Packages
# ---------------------------------
pkg_add() {
    if [ -z "$1" ]; then
        echo "Usage: arch pkg add package_name"
        return 1
    fi
    sudo pacman -S "$1"
}

pkg_rm() {
    if [ -z "$1" ]; then
        echo "Usage: arch pkg rm package_name"
        return 1
    fi
    sudo pacman -Rns "$1"
}

# ---------------------------------
# Main Command Dispatcher
# ---------------------------------
if [ $# -eq 0 ]; then
    usage
fi

case "$1" in
help | -h | --help)
    usage
    ;;
aur)
    shift
    case "$1" in
    search)
        shift
        aur_search "$@"
        ;;
    add)
        shift
        aur_add "$@"
        ;;
    rm)
        shift
        aur_rm "$@"
        ;;
    update)
        aur_update
        ;;
    info)
        shift
        aur_info "$@"
        ;;
    list)
        list_aur_packages
        ;;
    clean)
        clean_aur_cache
        ;;
    *)
        echo "Unknown subcommand for 'aur': $1"
        usage
        ;;
    esac
    ;;
pkg)
    shift
    case "$1" in
    search)
        shift
        search_pkg "$@"
        ;;
    update)
        update_pkg
        ;;
    add)
        shift
        pkg_add "$@"
        ;;
    rm)
        shift
        pkg_rm "$@"
        ;;
    info)
        shift
        pkg_info "$@"
        ;;
    list)
        list_installed
        ;;
    owns)
        shift
        owns_file "$@"
        ;;
    files)
        shift
        list_pkg_files "$@"
        ;;
    deps)
        shift
        show_deps "$@"
        ;;
    rdeps)
        shift
        show_rdeps "$@"
        ;;
    *)
        echo "Unknown subcommand for 'pkg': $1"
        usage
        ;;
    esac
    ;;
maintain | maint)
    arch_maintenance
    ;;
*)
    echo "Unknown command: $1"
    usage
    ;;
esac
